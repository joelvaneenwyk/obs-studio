# https://taskfile.dev

version: "3"

vars:
  RM1: '{{if eq .OS "Windows_NT"}}powershell -NoProfile -Command Remove-Item -Recurse -Force {{else}}rm -rf{{end}}'
  RM: '{{if eq .OS "Windows_NT"}}cmd /d /c rmdir /q /s{{else}}rm -rf{{end}}'
  OUTPUT_DIRECTORY: "{{.USER_WORKING_DIR}}/.build"
  PROJECT_ROOT: "{{.TASKFILE_DIR}}"
  STREAMFX_DIR: "{{.TASKFILE_DIR}}/UI/frontend-plugins/streamfx"

env:
  UnityPath: C:\Program Files\Unity\Hub\Editor\2022.3.7f1\Editor\Unity.exe

tasks:
  default:
    cmds:
      - task: build

  pull:
    cmds:
      - cmd: git pull --rebase --autostash

  build:
    cmds:
      - echo "Building..."
    internal: true
    silent: false

  streamfx-add:
    cmds:
      - cmd: git -C "{{fromSlash .PROJECT_ROOT}}" subtree add --prefix "UI/frontend-plugins/streamfx" "https://github.com/joelvaneenwyk/obs-StreamFX.git" "develop" --squash
    status:
      # If directory exists, this task will be skipped
      - test -d {{toSlash .STREAMFX_DIR}}

  streamfx-update:
    deps: [streamfx-add]
    cmds:
      - cmd: git -C "{{fromSlash .PROJECT_ROOT}}" subtree pull --prefix "UI/frontend-plugins/streamfx" "https://github.com/joelvaneenwyk/obs-StreamFX.git" "develop" --squash

  streamfx-remove-cached:
    cmds:
      # url = https://github.com/Xaymar/cmake-clang.git
      - cmd: git rm --cached "UI/frontend-plugins/streamfx/cmake/clang"
        ignore_error: true
      # url = https://github.com/Xaymar/cmake-version.git
      - cmd: git rm --cached "UI/frontend-plugins/streamfx/cmake/version"
        ignore_error: true
      # url = https://github.com/nlohmann/json.git
      - cmd: git rm --cached "UI/frontend-plugins/streamfx/third-party/nlohmann-json"
        ignore_error: true
      # url = https://github.com/Xaymar/msvc-redist-helper.git
      - cmd: git rm --cached "UI/frontend-plugins/streamfx/third-party/msvc-redist-helper"
        ignore_error: true
      # url = https://github.com/NVIDIA/MAXINE-AR-SDK.git
      - cmd: git rm --cached "UI/frontend-plugins/streamfx/third-party/nvidia-maxine-ar-sdk"
        ignore_error: true
      # url = https://github.com/NVIDIA/MAXINE-VFX-SDK.git
      - cmd: git rm --cached "UI/frontend-plugins/streamfx/third-party/nvidia-maxine-vfx-sdk"
        ignore_error: true
      # url = https://github.com/obsproject/obs-studio.git
      - cmd: git rm --cached "UI/frontend-plugins/streamfx/third-party/obs-studio"
        ignore_error: true
      # url = https://github.com/NVIDIA/MAXINE-AFX-SDK.git
      - cmd: git rm --cached "UI/frontend-plugins/streamfx/third-party/nvidia-maxine-afx-sdk"
        ignore_error: true
      - cmd: git rm --cached "UI/frontend-plugins/streamfx/plugins/obs-outputs/ftl-sdk"
        ignore_error: true
      - cmd: git rm --cached "UI/frontend-plugins/streamfx/plugins/obs-websocket"
        ignore_error: true
      - cmd: git rm --cached "UI/frontend-plugins/streamfx/plugins/obs-browser"
        ignore_error: true
      - cmd: git rm --cached "UI/frontend-plugins/streamfx/plugins/win-dshow/libdshowcapture"
        ignore_error: true
      - cmd: git submodule update --init --recursive --checkout

  #
  # Internal helper tasks
  #

  kill-process:
    internal: true
    vars:
      TARGET: '{{default "[Invalid_Process_Target]" .TARGET}}'
    cmds:
      - cmd: '{{if eq .OS "Windows_NT"}}powershell -NoProfile -Command Stop-Process -ErrorAction SilentlyContinue -Name "{{.TARGET}}" -Force{{else}}pkill -f "{{.TARGET}}"{{end}}'
        ignore_error: true

  kill-obs:
    silent: false
    internal: true
    cmds:
      - task: kill-process
        vars: { TARGET: "obs64" }
      - task: kill-process
        vars: { TARGET: "obs" }

  remove-directory:
    internal: true
    vars:
      TARGET: '{{default "[DIR_NAME]" .TARGET}}'
    cmds:
      - '{{if eq .OS "Windows_NT"}}cmd /d /c if exist "{{.TARGET}}" rmdir /q /s "{{.TARGET}}"{{else}}rm -rf {{.TARGET}}{{end}}'

  make-directory:
    internal: true
    vars:
      TARGET: '{{default "[DIR_NAME]" .TARGET}}'
    cmds:
      - '{{if eq .OS "Windows_NT"}}cmd /d /c if not exist "{{.TARGET}}" mkdir "{{.TARGET}}"{{else}}mkdir -p "{{.TARGET}}"{{end}}'
