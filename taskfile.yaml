# https://taskfile.dev

version: "3"

vars:
  RM1: '{{if eq .OS "Windows_NT"}}powershell -NoProfile -Command Remove-Item -Recurse -Force {{else}}rm -rf{{end}}'
  RM: '{{if eq .OS "Windows_NT"}}cmd /d /c rmdir /q /s{{else}}rm -rf{{end}}'
  OUTPUT_DIRECTORY: "{{.USER_WORKING_DIR}}/.build"
  PROJECT_ROOT: "{{.TASKFILE_DIR}}"
  STREAMFX_DIR: "{{.TASKFILE_DIR}}/UI/frontend-plugins/streamfx"

env:
  UnityPath: C:\Program Files\Unity\Hub\Editor\2022.3.7f1\Editor\Unity.exe

tasks:
  default:
    cmds:
      - task: build

  pull:
    cmds:
      - cmd: git pull --rebase --autostash

  build:
    cmds:
      # https://github.com/obsproject/obs-studio/wiki/build-instructions-for-windows
      # - git -C "{{fromSlash .PROJECT_ROOT}}" submodule init
      - git -C "{{fromSlash .PROJECT_ROOT}}" submodule update --init --recursive
      - cmake --preset windows-x64
      - cmake --build --preset windows-x64
    silent: false

  streamfx-add:
    cmds:
      - cmd: >-
          git -C "{{fromSlash .PROJECT_ROOT}}" subtree add
          --debug
          --prefix="UI/frontend-plugins/streamfx"
          --message="Add 'obs-StreamFX' subtree from GitHub to 'UI/frontend-plugins/streamfx'"
          https://github.com/joelvaneenwyk/obs-StreamFX.git develop
    status:
      # If directory exists, this task will be skipped
      - test -d {{toSlash .STREAMFX_DIR}}
    silent: false

  streamfx-update:
    deps: [streamfx-add]
    cmds:
      - cmd: >-
          git -C "{{fromSlash .PROJECT_ROOT}}" subtree pull
            --prefix="UI/frontend-plugins/streamfx"
          https://github.com/joelvaneenwyk/obs-StreamFX.git develop

  streamfx-remove:
    cmds:
      - cmd: 'cmd /D /C rmdir /Q /S "{{fromSlash .STREAMFX_DIR}}"'
    status:
      - test ! -d {{toSlash .STREAMFX_DIR}}
    silent: false

  commit-changes:
    cmds:
      - git add . && git commit -m "Updated files"
    ignore_error: true

  commit-taskfile:
    cmds:
      - cmd: git add taskfile.yaml && git commit -m "Update taskfile.yaml"
        ignore_error: true

  git-add-streamfx-subtree:
    internal: true
    requires:
      vars: [PREFIX, SUBMODULE_PATH, SUBMODULE_URL, SUBMODULE_COMMIT, SUBMODULE_BRANCH]
    vars:
      STREAMFX_ROOT: "{{.TASKFILE_DIR}}/UI/frontend-plugins/streamfx"
      SUBMODULE_ABS_PATH: "{{.TASKFILE_DIR}}/UI/frontend-plugins/streamfx/{{.SUBMODULE_PATH}}"
    cmds:
      # - cmd: git rm --cached -r "{{.PREFIX}}"
      #   ignore_error: true
      # - cmd: '{{if eq .OS "Windows_NT"}}cmd /d /c if exist "{{fromSlash .SUBMODULE_ABS_PATH}}" rmdir /q /s "{{fromSlash .SUBMODULE_ABS_PATH}}"{{end}}'
      # - task: commit-changes
      # - cmd: >-
      #     git -C "{{fromSlash .TASKFILE_DIR}}" subtree add
      #     --debug
      #     --prefix="UI/frontend-plugins/streamfx/{{.SUBMODULE_PATH}}"
      #     --message="Add '{{.SUBMODULE_URL}}' to '{{.SUBMODULE_PATH}}'"
      #     --squash
      #     {{.SUBMODULE_URL}}
      #     {{.SUBMODULE_COMMIT}}
    status:
      # Submodule is considered updated if the path exists and the '.gitmodules' file does not exist since
      # it means we have removed the submodule already and now using a subtree.
      - 'test ! -d {{.STREAMFX_ROOT}} || test ! -f {{joinPath .STREAMFX_ROOT ".gitmodules"}}'

  streamfx-update-submodule:
    requires:
      vars: [SUBMODULE_PATH, SUBMODULE_URL, SUBMODULE_COMMIT, SUBMODULE_BRANCH]
    vars:
      PREFIX: "UI/frontend-plugins/streamfx/{{.SUBMODULE_PATH}}"
    cmds:
      - task: commit-taskfile
      - cmd: git rm --cached -r {{.PREFIX}}
        ignore_error: true
      - cmd: git add . && git commit -m "Updated submodule '{{.PREFIX}}'"
        ignore_error: true
      - task: git-add-streamfx-subtree
        vars:
          SUBMODULE_URL: "{{ .SUBMODULE_URL }}"
          SUBMODULE_PATH: "{{ .SUBMODULE_PATH }}"
          SUBMODULE_COMMIT: "{{ .SUBMODULE_COMMIT }}"
          SUBMODULE_BRANCH: "{{ .SUBMODULE_BRANCH }}"

  streamfx-update-submodules:
    vars:
    cmds:
      - for:
          - path: "cmake/clang"
            commit: 7e577af2e963e3dfcce611942fce305c70583b2a
            url: "https://github.com/Xaymar/cmake-clang.git"
          - path: "cmake/version"
            commit: 3bef96bafab04161991c2cd98a1ed51f6362d670
            url: "https://github.com/Xaymar/cmake-version.git"
          - path: "third-party/nlohmann-json"
            commit: db78ac1d7716f56fc9f1b030b715f872f93964e4
            url: "https://github.com/nlohmann/json.git"
          - path: "third-party/msvc-redist-helper"
            commit: aa4665ccf68a382f1c2b115fb6c9668b6a8bd64d
            url: "https://github.com/Xaymar/msvc-redist-helper.git"
          - path: "third-party/nvidia-maxine-ar-sdk"
            commit: ca10ac3b3984357aab84b3c6319d35c82d49e836
            url: "https://github.com/NVIDIA/MAXINE-AR-SDK.git"
          - path: "third-party/nvidia-maxine-vfx-sdk"
            commit: f63d9d1dbd14c905d56648817f132d3eb9a8690d
            url: "https://github.com/NVIDIA/MAXINE-VFX-SDK.git"
          - path: "third-party/obs-studio"
            commit: abb80571351438bebd018a45d896b26f95881fbe
            url: "https://github.com/obsproject/obs-studio.git"
          - path: "third-party/nvidia-maxine-afx-sdk"
            commit: 4d4ed8d8aca914f4dbf8570f1626cf4108e19bb4
            url: "https://github.com/NVIDIA/MAXINE-AFX-SDK.git"
        task: streamfx-update-submodule
        vars:
          SUBMODULE_URL: "{{ .ITEM.url }}"
          SUBMODULE_PATH: "{{ .ITEM.path }}"
          SUBMODULE_COMMIT: "{{ .ITEM.commit }}"
          SUBMODULE_BRANCH: "master"

  #
  # Internal helper tasks
  #

  kill-process:
    internal: true
    vars:
      TARGET: '{{default "[Invalid_Process_Target]" .TARGET}}'
    cmds:
      - cmd: '{{if eq .OS "Windows_NT"}}powershell -NoProfile -Command Stop-Process -ErrorAction SilentlyContinue -Name "{{.TARGET}}" -Force{{else}}pkill -f "{{.TARGET}}"{{end}}'
        ignore_error: true

  kill-obs:
    silent: false
    internal: true
    cmds:
      - task: kill-process
        vars: { TARGET: "obs64" }
      - task: kill-process
        vars: { TARGET: "obs" }

  remove-directory:
    internal: true
    vars:
      TARGET: '{{default "[DIR_NAME]" .TARGET}}'
    cmds:
      - '{{if eq .OS "Windows_NT"}}cmd /d /c if exist "{{.TARGET}}" rmdir /q /s "{{.TARGET}}"{{else}}rm -rf {{.TARGET}}{{end}}'

  make-directory:
    internal: true
    vars:
      TARGET: '{{default "[DIR_NAME]" .TARGET}}'
    cmds:
      - '{{if eq .OS "Windows_NT"}}cmd /d /c if not exist "{{.TARGET}}" mkdir "{{.TARGET}}"{{else}}mkdir -p "{{.TARGET}}"{{end}}'
#
# Example batch script that sets up Visual Studio CLI
#
# @echo off
# goto:$Main
#
# :SetPathEnvironment
# setlocal EnableDelayedExpansion
#     set "_root=%~dp0"
#     set "_mingw_root=%USERPROFILE%\scoop\apps\mingw\current"
#
#     set "_path=C:\Program Files\PowerShell\7;C:\Windows\System32;C:\Windows;C:\Windows\System32\wbem"
#     set "_path=!_path!;C:\Windows\System32\WindowsPowerShell\v1.0"
#     set "_path=!_path!;%_mingw_root%\bin;%_mingw_root%\lib"
#     set "_path=!_path!;%USERPROFILE%\.dotfiles;%USERPROFILE%\.dotfiles\source\windows\bin"
#     set "_path=!_path!;C:\Program Files (x86)\GnuPG\bin;C:\Program Files (x86)\Gpg4win\bin;C:\Program Files\Git\bin"
#     set "_path=!_path!;C:\Program Files\dotnet"
#     set "_path=!_path!;C:\Program Files\gsudo\Current"
#     set "_path=!_path!;C:\Program Files\nodejs"
#     set "_path=!_path!;C:\Program Files\GitHub CLI"
#     set "_path=!_path!;C:\Program Files\Git\cmd"
#     set "_path=!_path!;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps"
#     set "_path=!_path!;%USERPROFILE%\AppData\Roaming\npm"
#     set "_path=!_path!;%USERPROFILE%\AppData\Local\Programs\Microsoft VS Code\bin"
#     set "_path=!_path!;%USERPROFILE%\AppData\Local\Programs\Python\Launcher"
#     set "_path=!_path!;%USERPROFILE%\.cargo\bin"
#     set "_path=!_path!;%USERPROFILE%\AppData\Local\Programs\Python\Python311\Scripts"
#     set "_path=!_path!;%USERPROFILE%\AppData\Local\Programs\Python\Python311"
#     set "_path=!_path!;C:\Program Files (x86)\GnuWin32\bin"
#     set "_path=!_path!;%USERPROFILE%\AppData\Local\GitHubDesktop\bin"
#     set "_path=!_path!;%USERPROFILE%\AppData\Local\Microsoft\WinGet\Links"
#     set "_path=!_path!;%USERPROFILE%\scoop\apps\gsudo\current"
#     set "_path=!_path!;%USERPROFILE%\AppData\Local\JetBrains\Toolbox\scripts"
#
#     set "_path=!_path!;C:\Program Files (x86)\Windows Kits\10\bin\10.0.22621.0\x64"
#     set "_dev_cmd=C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\Tools\VsDevCmd.bat"
#     if not exist "!_dev_cmd!" set "_dev_cmd=C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"
#     if not exist "!_dev_cmd!" set "_dev_cmd="
# endlocal & (
#     set "PATH=%_path%"
#     set "MINGW=%_mingw_root%"
#     set "MSVC_DEV_CMD=%_dev_cmd%"
#     set "PROJECT_ROOT=%_root%"
#     exit /b %ERRORLEVEL%
# )
#
# :$Main
# setlocal EnableDelayedExpansion
#     call :SetPathEnvironment
#     echo Initialized environment for 'OBS Studio' project.
#
#     if defined VSCMD_VER (
#         echo Skipped Visual Studio environment setup as it appears setup already.
#         goto:$DevCmdDone
#     )
#
#     if not exist "%MSVC_DEV_CMD%" (
#         echo Failed to find development command script for Visual Studio.
#         goto:$DevCmdDone
#     )
#
#     set VSCMD_DEBUG=2
#     set "_cmd="%MSVC_DEV_CMD%" -startdir="%PROJECT_ROOT%" -app_platform=Desktop -no_logo -no_ext -arch=x64 -host_arch=x64"
#     echo ##[cmd] !_cmd!
#     call !_cmd!
#     :$DevCmdDone
#     goto:$MainEnd
#
#     :$MainEnd
# endlocal & (
#     set "PATH=%PATH%"
#     set "MINGW=%MINGW%"
#     set "MSVC_DEV_CMD=%_dev_cmd%"
#     set "VSCMD_ARG_app_plat=%VSCMD_ARG_app_plat%"
#     set "VSCMD_ARG_HOST_ARCH=%VSCMD_ARG_HOST_ARCH%"
#     set "VSCMD_ARG_no_ext=%VSCMD_ARG_no_ext%"
#     set "VSCMD_ARG_no_logo=%VSCMD_ARG_no_logo%"
#     set "VSCMD_ARG_STARTDIR=%VSCMD_ARG_STARTDIR%"
#     set "VSCMD_ARG_TGT_ARCH=%VSCMD_ARG_TGT_ARCH%"
#     set "VSCMD_DEBUG=%VSCMD_DEBUG%"
#     set "VSCMD_VER=%VSCMD_VER%"
#     set "VSINSTALLDIR=%VSINSTALLDIR%"
#     set "windir=%windir%"
#     set "WindowsLibPath=%WindowsLibPath%"
#     set "WindowsSdkBinPath=%WindowsSdkBinPath%"
#     set "WindowsSdkDir=%WindowsSdkDir%"
#     set "WindowsSDKLibVersion=%WindowsSDKLibVersion%"
#     set "WindowsSdkVerBinPath=%WindowsSdkVerBinPath%"
#     set "WindowsSDKVersion=%WindowsSDKVersion%"
#     set "WIX=%WIX%"
# )
# cd /d "%~dp0"
# exit /b 0
